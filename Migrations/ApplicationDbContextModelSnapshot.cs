// <auto-generated />
using System;
using DesafioAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DesafioAPI.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Number")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("State")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZIPCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("DesafioAPI.Models.Arrest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CrimeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeputyId")
                        .HasColumnType("int");

                    b.Property<int?>("OfficerId")
                        .HasColumnType("int");

                    b.Property<int?>("PerpetratorId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CrimeId");

                    b.HasIndex("DeputyId");

                    b.HasIndex("OfficerId");

                    b.HasIndex("PerpetratorId");

                    b.ToTable("Arrests");
                });

            modelBuilder.Entity("DesafioAPI.Models.Autopsy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CoronerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("VictimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoronerId");

                    b.HasIndex("VictimId");

                    b.ToTable("Autopsies");
                });

            modelBuilder.Entity("DesafioAPI.Models.Coroner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RegisterId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Coroners");
                });

            modelBuilder.Entity("DesafioAPI.Models.Crime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PerpetratorId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("VictimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.HasIndex("PerpetratorId");

                    b.HasIndex("VictimId");

                    b.ToTable("Crimes");
                });

            modelBuilder.Entity("DesafioAPI.Models.Deputy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PoliceDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("RegisterId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Shift")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("PoliceDepartmentId");

                    b.ToTable("Deputies");
                });

            modelBuilder.Entity("DesafioAPI.Models.Perpetrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Perpetrators");
                });

            modelBuilder.Entity("DesafioAPI.Models.PoliceDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.ToTable("PoliceDepartments");
                });

            modelBuilder.Entity("DesafioAPI.Models.PoliceOfficer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Rank")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RegisterId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("PoliceOfficers");
                });

            modelBuilder.Entity("DesafioAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RegisterId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserRole")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DesafioAPI.Models.Victim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Victims");
                });

            modelBuilder.Entity("DesafioAPI.Models.Arrest", b =>
                {
                    b.HasOne("DesafioAPI.Models.Crime", "Crime")
                        .WithMany()
                        .HasForeignKey("CrimeId");

                    b.HasOne("DesafioAPI.Models.Deputy", "Deputy")
                        .WithMany()
                        .HasForeignKey("DeputyId");

                    b.HasOne("DesafioAPI.Models.PoliceOfficer", "Officer")
                        .WithMany()
                        .HasForeignKey("OfficerId");

                    b.HasOne("DesafioAPI.Models.Perpetrator", "Perpetrator")
                        .WithMany()
                        .HasForeignKey("PerpetratorId");
                });

            modelBuilder.Entity("DesafioAPI.Models.Autopsy", b =>
                {
                    b.HasOne("DesafioAPI.Models.Coroner", "Coroner")
                        .WithMany()
                        .HasForeignKey("CoronerId");

                    b.HasOne("DesafioAPI.Models.Victim", "Victim")
                        .WithMany()
                        .HasForeignKey("VictimId");
                });

            modelBuilder.Entity("DesafioAPI.Models.Crime", b =>
                {
                    b.HasOne("DesafioAPI.Models.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId");

                    b.HasOne("DesafioAPI.Models.Perpetrator", "Perpetrator")
                        .WithMany()
                        .HasForeignKey("PerpetratorId");

                    b.HasOne("DesafioAPI.Models.Victim", "Victim")
                        .WithMany()
                        .HasForeignKey("VictimId");
                });

            modelBuilder.Entity("DesafioAPI.Models.Deputy", b =>
                {
                    b.HasOne("DesafioAPI.Models.PoliceDepartment", "PoliceDepartment")
                        .WithMany()
                        .HasForeignKey("PoliceDepartmentId");
                });

            modelBuilder.Entity("DesafioAPI.Models.PoliceDepartment", b =>
                {
                    b.HasOne("DesafioAPI.Models.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId");
                });
#pragma warning restore 612, 618
        }
    }
}
